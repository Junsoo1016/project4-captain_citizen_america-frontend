{"ast":null,"code":"var _jsxFileName = \"/Users/junsoopark/Desktop/project/Final Project/project4-captain_citizen/project4-captain_citizen-frontend/captain_citizen_america/src/Map/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { GoogleMap, useJsApiLoader, MarkerF, InfoWindow } from '@react-google-maps/api';\nimport \"./map.css\";\nimport mapStyles from './mapStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  margin: '0 auto'\n};\nconst center = {\n  lat: 40.74112,\n  lng: -73.98974\n}; // const options = {\n//   mapId: \"fb4ccbd45b2f920e\"\n// }\n\nfunction Map(_ref) {\n  _s();\n\n  let {\n    userData\n  } = _ref;\n  // console.log(props);\n  const isLoaded = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAwcOSQ6hnqoqiXX_1D1ykHOBAZZ2UorHE\",\n    libraries: ['places']\n  });\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n  originRef = React.useRef();\n  destinationRef = React.useRef();\n  const calculateDistance = useCallback(() => {\n    const origin = originRef.current.getPlace();\n    const destination = destinationRef.current.getPlace();\n\n    if (origin && destination) {\n      const originLat = origin.geometry.location.lat();\n      const originLng = origin.geometry.location.lng();\n      const destinationLat = destination.geometry.location.lat();\n      const destinationLng = destination.geometry.location.lng();\n      const originCoords = {\n        lat: originLat,\n        lng: originLng\n      };\n      const destinationCoords = {\n        lat: destinationLat,\n        lng: destinationLng\n      };\n      const distance = google.maps.geometry.spherical.computeDistanceBetween(originCoords, destinationCoords);\n      const duration = google.maps.geometry.spherical.computeDistanceBetween(originCoords, destinationCoords);\n      setDistance(distance);\n      setDuration(duration);\n    }\n  }, []);\n  const image = \"./images/Captain_America's_Shield.png\";\n  const userMarker = \"./images/user.png\";\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  console.log(selectedMarker); // const [center, setCenter] = useState(center)\n  // const currentLocation = useCallback(() => {\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(position => {\n  //       const { latitude, longitude } = position.coords;\n  //       setCenter({ lat: latitude, lng: longitude });\n  //     });\n  //   }\n  // })\n\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 16,\n    options: {\n      styles: mapStyles\n    },\n    children: [userData.map(user => {\n      let lat = parseFloat(user.lat);\n      let lng = parseFloat(user.lng);\n      return /*#__PURE__*/_jsxDEV(MarkerF, {\n        position: {\n          lat: lat,\n          lng: lng\n        },\n        icon: {\n          url: image,\n          scaledSize: new window.google.maps.Size(28, 28)\n        },\n        onClick: () => {\n          setSelectedMarker(user);\n          console.log(user);\n        }\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this);\n    }), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: parseFloat(selectedMarker.lat),\n        lng: parseFloat(selectedMarker.lng)\n      },\n      onCloseClick: () => {\n        setSelectedMarker(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoWindow\",\n        children: [\"User Details\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedMarker.first_name, \" \", selectedMarker.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Navigate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Map, \"7x1xMrIB4qeBQOmpAO50uHI4Pbk=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","GoogleMap","useJsApiLoader","MarkerF","InfoWindow","mapStyles","containerStyle","width","height","margin","center","lat","lng","Map","userData","isLoaded","id","googleMapsApiKey","libraries","selectedPlace","setSelectedPlace","distance","setDistance","duration","setDuration","originRef","useRef","destinationRef","calculateDistance","origin","current","getPlace","destination","originLat","geometry","location","originLng","destinationLat","destinationLng","originCoords","destinationCoords","google","maps","spherical","computeDistanceBetween","image","userMarker","selectedMarker","setSelectedMarker","console","log","styles","map","user","parseFloat","url","scaledSize","window","Size","first_name","last_name","memo"],"sources":["/Users/junsoopark/Desktop/project/Final Project/project4-captain_citizen/project4-captain_citizen-frontend/captain_citizen_america/src/Map/Map.js"],"sourcesContent":["import React, {useState, useCallback, useEffect} from 'react'\nimport { GoogleMap, useJsApiLoader, MarkerF, InfoWindow } from '@react-google-maps/api';\nimport \"./map.css\"\nimport mapStyles from './mapStyles'\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  margin: '0 auto',\n}\n\nconst center = {\n  lat: 40.74112,\n  lng: -73.98974\n}\n\n// const options = {\n//   mapId: \"fb4ccbd45b2f920e\"\n// }\n\n\n\nfunction Map({userData}) {\n  // console.log(props);\n  const isLoaded = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAwcOSQ6hnqoqiXX_1D1ykHOBAZZ2UorHE\",\n    libraries: ['places'],\n  })\n\n  const [selectedPlace, setSelectedPlace] = useState(null)\n  const [distance, setDistance] = useState(null)\n  const [duration, setDuration] = useState(null)\n  originRef = React.useRef()\n  destinationRef = React.useRef()\n\n  const calculateDistance = useCallback(() => {\n    const origin = originRef.current.getPlace()\n    const destination = destinationRef.current.getPlace()\n    if (origin && destination) {\n      const originLat = origin.geometry.location.lat()\n      const originLng = origin.geometry.location.lng()\n      const destinationLat = destination.geometry.location.lat()\n      const destinationLng = destination.geometry.location.lng()\n      const originCoords = {lat: originLat, lng: originLng}\n      const destinationCoords = {lat: destinationLat, lng: destinationLng}\n      const distance = google.maps.geometry.spherical.computeDistanceBetween(originCoords, destinationCoords)\n      const duration = google.maps.geometry.spherical.computeDistanceBetween(originCoords, destinationCoords)\n      setDistance(distance)\n      setDuration(duration)\n    }\n  }, [])\n\n  const image = \"./images/Captain_America's_Shield.png\"\n  const userMarker = \"./images/user.png\"\n\n  const [selectedMarker, setSelectedMarker] = useState(null)\n\n  console.log(selectedMarker);\n\n  // const [center, setCenter] = useState(center)\n  // const currentLocation = useCallback(() => {\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(position => {\n  //       const { latitude, longitude } = position.coords;\n  //       setCenter({ lat: latitude, lng: longitude });\n  //     });\n  //   }\n  // })\n\n  return isLoaded ? (\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={16}\n        options={{styles: mapStyles}}\n      >\n\n      {userData.map((user) => {\n    let lat = parseFloat(user.lat);\n    let lng = parseFloat(user.lng);\n\n    return (\n      <MarkerF\n      key={user.id}\n      position= {{lat: lat, lng: lng}} \n      icon={{\n        url: image,\n        scaledSize: new window.google.maps.Size(28,28)\n      }}\n      onClick={() => {\n        setSelectedMarker(user)\n        console.log(user)\n      }}\n      />\n    )\n  })\n}\n\n\n      {selectedMarker && \n      (<InfoWindow\n      position= {{lat: parseFloat(selectedMarker.lat), lng: parseFloat(selectedMarker.lng)}}\n      onCloseClick={() => {\n        setSelectedMarker(null)\n      }}\n      >\n      <div className='infoWindow'>\n        User Details\n        <p>Name: {selectedMarker.first_name} {selectedMarker.last_name}</p>\n        <button>Navigate</button>\n      </div>\n      </InfoWindow>\n      )}\n\n    </GoogleMap>\n     \n\n    \n    \n  ) : <h1>Loading</h1>\n}\nexport default React.memo(Map)"],"mappings":"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"},"metadata":{},"sourceType":"module"}