{"ast":null,"code":"var _jsxFileName = \"/Users/junsoopark/Desktop/project/Final Project/project4-captain_citizen/project4-captain_citizen-frontend/captain_citizen_america/src/Map/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { GoogleMap, useJsApiLoader, MarkerF, InfoWindow } from '@react-google-maps/api';\nimport \"./map.css\";\nimport mapStyles from './mapStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  margin: '0 auto'\n};\nconst center = {\n  lat: 40.74112,\n  lng: -73.98974\n}; // const options = {\n//   mapId: \"fb4ccbd45b2f920e\"\n// }\n\nfunction Map(_ref) {\n  _s();\n\n  let {\n    userData\n  } = _ref;\n  // console.log(props);\n  const isLoaded = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAwcOSQ6hnqoqiXX_1D1ykHOBAZZ2UorHE\"\n  });\n  const image = \"./images/Captain_America's_Shield.png\";\n  const userMarker = \"./images/user.png\";\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  console.log(selectedMarker);\n  const [center, setCenter] = useState(center);\n  const currentLocation = useCallback(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCenter({\n          lat: latitude,\n          lng: longitude\n        });\n      });\n    }\n  });\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 16,\n    options: {\n      styles: mapStyles\n    },\n    children: [userData.map(user => {\n      let lat = parseFloat(user.lat);\n      let lng = parseFloat(user.lng);\n      return /*#__PURE__*/_jsxDEV(MarkerF, {\n        position: {\n          lat: lat,\n          lng: lng\n        },\n        icon: {\n          url: image,\n          scaledSize: new window.google.maps.Size(28, 28)\n        },\n        onClick: () => {\n          setSelectedMarker(user);\n          console.log(user);\n        }\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this);\n    }), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: parseFloat(selectedMarker.lat),\n        lng: parseFloat(selectedMarker.lng)\n      },\n      onCloseClick: () => {\n        setSelectedMarker(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoWindow\",\n        children: [\"User Details\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedMarker.first_name, \" \", selectedMarker.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Navigate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Map, \"O+nRwM9OI+/zOsisqNvfM3zEF0Q=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","GoogleMap","useJsApiLoader","MarkerF","InfoWindow","mapStyles","containerStyle","width","height","margin","center","lat","lng","Map","userData","isLoaded","id","googleMapsApiKey","image","userMarker","selectedMarker","setSelectedMarker","console","log","setCenter","currentLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","styles","map","user","parseFloat","url","scaledSize","window","google","maps","Size","first_name","last_name","memo"],"sources":["/Users/junsoopark/Desktop/project/Final Project/project4-captain_citizen/project4-captain_citizen-frontend/captain_citizen_america/src/Map/Map.js"],"sourcesContent":["import React, {useState, useCallback, useEffect} from 'react'\nimport { GoogleMap, useJsApiLoader, MarkerF, InfoWindow } from '@react-google-maps/api';\nimport \"./map.css\"\nimport mapStyles from './mapStyles'\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  margin: '0 auto',\n}\n\nconst center = {\n  lat: 40.74112,\n  lng: -73.98974\n}\n\n// const options = {\n//   mapId: \"fb4ccbd45b2f920e\"\n// }\n\n\n\nfunction Map({userData}) {\n  // console.log(props);\n  const isLoaded = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAwcOSQ6hnqoqiXX_1D1ykHOBAZZ2UorHE\"\n  })\n\n  const image = \"./images/Captain_America's_Shield.png\"\n  const userMarker = \"./images/user.png\"\n\n  const [selectedMarker, setSelectedMarker] = useState(null)\n\n  console.log(selectedMarker);\n\n  const [center, setCenter] = useState(center)\n  const currentLocation = useCallback(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const { latitude, longitude } = position.coords;\n        setCenter({ lat: latitude, lng: longitude });\n      });\n    }\n  })\n\n  return isLoaded ? (\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={16}\n        options={{styles: mapStyles}}\n      >\n\n      {userData.map((user) => {\n    let lat = parseFloat(user.lat);\n    let lng = parseFloat(user.lng);\n\n    return (\n      <MarkerF\n      key={user.id}\n      position= {{lat: lat, lng: lng}} \n      icon={{\n        url: image,\n        scaledSize: new window.google.maps.Size(28,28)\n      }}\n      onClick={() => {\n        setSelectedMarker(user)\n        console.log(user)\n      }}\n      />\n    )\n  })\n}\n\n\n      {selectedMarker && \n      (<InfoWindow\n      position= {{lat: parseFloat(selectedMarker.lat), lng: parseFloat(selectedMarker.lng)}}\n      onCloseClick={() => {\n        setSelectedMarker(null)\n      }}\n      >\n      <div className='infoWindow'>\n        User Details\n        <p>Name: {selectedMarker.first_name} {selectedMarker.last_name}</p>\n        <button>Navigate</button>\n      </div>\n      </InfoWindow>\n      )}\n\n    </GoogleMap>\n     \n\n    \n    \n  ) : <h1>Loading</h1>\n}\nexport default React.memo(Map)"],"mappings":"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"},"metadata":{},"sourceType":"module"}