{"ast":null,"code":"var _jsxFileName = \"/Users/junsoopark/Desktop/project/Final Project/project4-captain_citizen/project4-captain_citizen-frontend/captain_citizen_america/src/Map/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { GoogleMap, useJsApiLoader, MarkerF, InfoWindow } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  margin: '0 auto'\n};\nconst center = {\n  lat: 40.74112,\n  lng: -73.98974\n};\nconst options = {\n  mapId: \"fb4ccbd45b2f920e\"\n};\n\nfunction Map(_ref) {\n  _s();\n\n  let {\n    userData\n  } = _ref;\n  // console.log(props);\n  const isLoaded = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAwcOSQ6hnqoqiXX_1D1ykHOBAZZ2UorHE\"\n  });\n  const image = \"./images/Captain_America's_Shield.png\";\n  const userMarker = \"./images/user.png\";\n  const [selectedMarker, setSelectedMarker] = useState(null); // const coordinatesList = userData.map((user) => {\n  //   // console.log(user);\n  //   let lat = parseFloat(user.lat);\n  //   // console.log(lat);\n  //   let lng = parseFloat(user.lng);\n  //   return (\n  //     // <Marker\n  //     // position= {{lat: 40.73999, lng: -73.99020}} \n  //     // icon={{\n  //     //   url: userMarker,\n  //     //   scaledSize: new window.google.maps.Size(20,30)\n  //     // }}\n  //     // />,\n  //     <MarkerF\n  //     position= {{lat: lat, lng: lng}} \n  //     icon={{\n  //       url: image,\n  //       scaledSize: new window.google.maps.Size(28,28)\n  //     }}\n  //     onClick={() => {\n  //       setSelectedMarker(user)\n  //       console.log(user)\n  //     }}\n  //     />\n  //   )\n  // })\n\n  console.log(selectedMarker);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 16,\n    options: options,\n    children: [userData.map(user => {\n      // console.log(user);\n      let lat = parseFloat(user.lat); // console.log(lat);\n\n      let lng = parseFloat(user.lng);\n      return (\n        /*#__PURE__*/\n        // <Marker\n        // position= {{lat: 40.73999, lng: -73.99020}} \n        // icon={{\n        //   url: userMarker,\n        //   scaledSize: new window.google.maps.Size(20,30)\n        // }}\n        // />,\n        _jsxDEV(MarkerF, {\n          position: {\n            lat: lat,\n            lng: lng\n          },\n          icon: {\n            url: image,\n            scaledSize: new window.google.maps.Size(28, 28)\n          },\n          onClick: () => {\n            setSelectedMarker(user);\n            console.log(user);\n          }\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this)\n      );\n    }), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: parseFloat(selectedMarker.lat),\n        lng: parseFloat(selectedMarker.lng)\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"User Details\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedMarker.first_name, \" \", selectedMarker.first_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Map, \"iccTB+XshPFTfWm3CQV2waAYEfQ=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","GoogleMap","useJsApiLoader","MarkerF","InfoWindow","containerStyle","width","height","margin","center","lat","lng","options","mapId","Map","userData","isLoaded","id","googleMapsApiKey","image","userMarker","selectedMarker","setSelectedMarker","console","log","map","user","parseFloat","url","scaledSize","window","google","maps","Size","first_name","memo"],"sources":["/Users/junsoopark/Desktop/project/Final Project/project4-captain_citizen/project4-captain_citizen-frontend/captain_citizen_america/src/Map/Map.js"],"sourcesContent":["import React, {useState, useCallback, useEffect} from 'react'\nimport { GoogleMap, useJsApiLoader, MarkerF, InfoWindow } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  margin: '0 auto',\n}\n\nconst center = {\n  lat: 40.74112,\n  lng: -73.98974\n}\n\nconst options = {\n  mapId: \"fb4ccbd45b2f920e\"\n}\n\n\n\nfunction Map({userData}) {\n  // console.log(props);\n  const isLoaded = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAwcOSQ6hnqoqiXX_1D1ykHOBAZZ2UorHE\"\n  })\n\n  const image = \"./images/Captain_America's_Shield.png\"\n  const userMarker = \"./images/user.png\"\n\n  const [selectedMarker, setSelectedMarker] = useState(null)\n\n  // const coordinatesList = userData.map((user) => {\n  //   // console.log(user);\n  //   let lat = parseFloat(user.lat);\n  //   // console.log(lat);\n  //   let lng = parseFloat(user.lng);\n\n  //   return (\n  //     // <Marker\n  //     // position= {{lat: 40.73999, lng: -73.99020}} \n  //     // icon={{\n  //     //   url: userMarker,\n  //     //   scaledSize: new window.google.maps.Size(20,30)\n  //     // }}\n  //     // />,\n  //     <MarkerF\n  //     position= {{lat: lat, lng: lng}} \n  //     icon={{\n  //       url: image,\n  //       scaledSize: new window.google.maps.Size(28,28)\n  //     }}\n  //     onClick={() => {\n  //       setSelectedMarker(user)\n  //       console.log(user)\n  //     }}\n  //     />\n  //   )\n  // })\n\n  console.log(selectedMarker);\n\n  return isLoaded ? (\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={16}\n        options={options}\n      >\n\n      {/* await {coordinatesList} */}\n\n      {userData.map((user) => {\n    // console.log(user);\n    let lat = parseFloat(user.lat);\n    // console.log(lat);\n    let lng = parseFloat(user.lng);\n\n    return (\n      // <Marker\n      // position= {{lat: 40.73999, lng: -73.99020}} \n      // icon={{\n      //   url: userMarker,\n      //   scaledSize: new window.google.maps.Size(20,30)\n      // }}\n      // />,\n      <MarkerF\n      key={user.id}\n      position= {{lat: lat, lng: lng}} \n      icon={{\n        url: image,\n        scaledSize: new window.google.maps.Size(28,28)\n      }}\n      onClick={() => {\n        setSelectedMarker(user)\n        console.log(user)\n      }}\n      />\n    )\n  })\n}\n\n\n      {selectedMarker && \n      (<InfoWindow\n      position= {{lat: parseFloat(selectedMarker.lat), lng: parseFloat(selectedMarker.lng)}}\n      >\n      <div>\n        User Details\n        <p>Name: {selectedMarker.first_name} {selectedMarker.first_name}</p>\n      </div>\n      </InfoWindow>\n      )}\n\n    </GoogleMap>\n     \n\n    \n    \n  ) : <h1>Loading</h1>\n}\nexport default React.memo(Map)"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,OAApC,EAA6CC,UAA7C,QAA+D,wBAA/D;;AAEA,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MADc;EAErBC,MAAM,EAAE,MAFa;EAGrBC,MAAM,EAAE;AAHa,CAAvB;AAMA,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,QADQ;EAEbC,GAAG,EAAE,CAAC;AAFO,CAAf;AAKA,MAAMC,OAAO,GAAG;EACdC,KAAK,EAAE;AADO,CAAhB;;AAMA,SAASC,GAAT,OAAyB;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EACvB;EACA,MAAMC,QAAQ,GAAGd,cAAc,CAAC;IAC9Be,EAAE,EAAE,mBAD0B;IAE9BC,gBAAgB,EAAE;EAFY,CAAD,CAA/B;EAKA,MAAMC,KAAK,GAAG,uCAAd;EACA,MAAMC,UAAU,GAAG,mBAAnB;EAEA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCxB,QAAQ,CAAC,IAAD,CAApD,CAVuB,CAYvB;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAyB,OAAO,CAACC,GAAR,CAAYH,cAAZ;EAEA,OAAOL,QAAQ,gBACX,QAAC,SAAD;IACE,iBAAiB,EAAEX,cADrB;IAEE,MAAM,EAAEI,MAFV;IAGE,IAAI,EAAE,EAHR;IAIE,OAAO,EAAEG,OAJX;IAAA,WASCG,QAAQ,CAACU,GAAT,CAAcC,IAAD,IAAU;MAC1B;MACA,IAAIhB,GAAG,GAAGiB,UAAU,CAACD,IAAI,CAAChB,GAAN,CAApB,CAF0B,CAG1B;;MACA,IAAIC,GAAG,GAAGgB,UAAU,CAACD,IAAI,CAACf,GAAN,CAApB;MAEA;QAAA;QACE;QACA;QACA;QACA;QACA;QACA;QACA;QACA,QAAC,OAAD;UAEA,QAAQ,EAAG;YAACD,GAAG,EAAEA,GAAN;YAAWC,GAAG,EAAEA;UAAhB,CAFX;UAGA,IAAI,EAAE;YACJiB,GAAG,EAAET,KADD;YAEJU,UAAU,EAAE,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,IAAvB,CAA4B,EAA5B,EAA+B,EAA/B;UAFR,CAHN;UAOA,OAAO,EAAE,MAAM;YACbX,iBAAiB,CAACI,IAAD,CAAjB;YACAH,OAAO,CAACC,GAAR,CAAYE,IAAZ;UACD;QAVD,GACKA,IAAI,CAACT,EADV;UAAA;UAAA;UAAA;QAAA;MARF;IAqBD,CA3BI,CATD,EAwCCI,cAAc,iBACd,QAAC,UAAD;MACD,QAAQ,EAAG;QAACX,GAAG,EAAEiB,UAAU,CAACN,cAAc,CAACX,GAAhB,CAAhB;QAAsCC,GAAG,EAAEgB,UAAU,CAACN,cAAc,CAACV,GAAhB;MAArD,CADV;MAAA,uBAGD;QAAA,wCAEE;UAAA,qBAAUU,cAAc,CAACa,UAAzB,OAAsCb,cAAc,CAACa,UAArD;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IAHC;MAAA;MAAA;MAAA;IAAA,QAzCD;EAAA;IAAA;IAAA;IAAA;EAAA,QADW,gBAyDX;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAzDJ;AA0DD;;GApGQpB,G;UAEUZ,c;;;KAFVY,G;AAqGT,kCAAejB,KAAK,CAACsC,IAAN,CAAWrB,GAAX,CAAf"},"metadata":{},"sourceType":"module"}