{"ast":null,"code":"var _jsxFileName = \"/Users/junsoopark/Desktop/project/Final Project/project4-captain_citizen/project4-captain_citizen-frontend/captain_citizen_america/src/Map/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { GoogleMap, useJsApiLoader, MarkerF, InfoWindow, DirectionsRenderer } from '@react-google-maps/api';\nimport \"./map.css\";\nimport mapStyles from './mapStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  margin: '0 auto'\n};\nconst center = {\n  lat: 40.74112,\n  lng: -73.98974\n};\nconst google = window.google;\n\nfunction Map(_ref) {\n  _s();\n\n  let {\n    userData\n  } = _ref;\n  // console.log(props);\n  const isLoaded = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyBmHkW3ofuiO5FCGSrDFflMhZ5nmQ1PfNM\",\n    libraries: libraries.places\n  });\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [directions, setDirections] = useState(null);\n  const [map, setMap] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState({\n    lat: 40.74112,\n    lng: -73.98974\n  });\n  const [destination, setDestination] = useState({\n    lat: null,\n    lng: null\n  });\n\n  const calculateRoute = () => {\n    const origin = new google.maps.LatLng(currentLocation.lat, currentLocation.lng);\n    const destination = new google.maps.LatLng(40.741976, -73.990584);\n    const directionsService = new google.maps.DirectionsService();\n    const directionsDisplay = new google.maps.DirectionsRenderer();\n    directionsDisplay.setMap(map);\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: 'WALKING'\n    }, (result, status) => {\n      if (status === 'OK') {\n        setDirections(result);\n        directionsDisplay.setDirections(result);\n      } else {\n        window.alert('Directions request failed due to ' + status);\n      }\n    });\n  }; // const calculateDistance = useCallback(() => {\n  //   // const origin = new google.maps.LatLng(currentLocation.lat, currentLocation.lng)\n  //   // const destination = new google.maps.LatLng(destination.lat, destination.lng)\n  //   const service = new google.maps.DistanceMatrixService()\n  //   service.getDistanceMatrix({\n  //     origins: [currentLocation],\n  //     destinations: [destination],\n  //     travelMode: google.maps.TravelMode.WALKING,\n  //     unitSystem: google.maps.UnitSystem.IMPERIAL,\n  //   }, (response, status) => {\n  //     if (status ===  google.maps.DistanceMatrixStatus.OK) {\n  //       const { distance, duration } = response.rows[0].elements[0]\n  //       setDistance(distance.text)\n  //       setDuration(duration.text)\n  //     }\n  //   })\n  // }, [currentLocation, destination])\n\n\n  const clearRoute = useCallback(() => {\n    setSelectedPlace(null);\n    setDistance(null);\n    setDuration(null);\n  }, [setSelectedPlace, setDistance, setDuration]);\n  const image = \"./images/Captain_America's_Shield.png\";\n  const userMarker = \"./images/user.png\";\n  const [selectedMarker, setSelectedMarker] = useState(); // console.log(selectedMarker);\n\n  console.log(destination);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 16,\n    options: {\n      styles: mapStyles\n    },\n    children: [/*#__PURE__*/_jsxDEV(MarkerF, {\n      position: currentLocation,\n      icon: {\n        url: userMarker,\n        scaledSize: new window.google.maps.Size(25, 35)\n      },\n      onClick: () => {\n        setSelectedMarker(currentLocation);\n        setSelectedPlace(currentLocation);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), userData.map(user => {\n      let lat = parseFloat(user.lat);\n      let lng = parseFloat(user.lng);\n      return /*#__PURE__*/_jsxDEV(MarkerF, {\n        position: {\n          lat: lat,\n          lng: lng\n        },\n        icon: {\n          url: image,\n          scaledSize: new window.google.maps.Size(28, 28)\n        },\n        onClick: () => {\n          setSelectedMarker(user);\n          setDestination({ ...destination,\n            lat: parseFloat(selectedMarker.lat),\n            lng: parseFloat(selectedMarker.lng)\n          });\n          console.log(user);\n        }\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this);\n    }), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: parseFloat(selectedMarker.lat),\n        lng: parseFloat(selectedMarker.lng)\n      },\n      onCloseClick: () => {\n        setSelectedMarker(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"infoWindow\",\n        children: [\"User Details\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedMarker.first_name, \" \", selectedMarker.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: calculateRoute,\n          children: \"Navigate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Map, \"XVb1l1tI9Yb4UbtbUQPC7Y2C7aE=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","GoogleMap","useJsApiLoader","MarkerF","InfoWindow","DirectionsRenderer","mapStyles","containerStyle","width","height","margin","center","lat","lng","google","window","Map","userData","isLoaded","id","googleMapsApiKey","libraries","places","selectedPlace","setSelectedPlace","distance","setDistance","duration","setDuration","directions","setDirections","map","setMap","currentLocation","setCurrentLocation","destination","setDestination","calculateRoute","origin","maps","LatLng","directionsService","DirectionsService","directionsDisplay","route","travelMode","result","status","alert","clearRoute","image","userMarker","selectedMarker","setSelectedMarker","console","log","styles","url","scaledSize","Size","user","parseFloat","first_name","last_name","memo"],"sources":["/Users/junsoopark/Desktop/project/Final Project/project4-captain_citizen/project4-captain_citizen-frontend/captain_citizen_america/src/Map/Map.js"],"sourcesContent":["import React, {useState, useCallback, useEffect} from 'react'\nimport { GoogleMap, useJsApiLoader, MarkerF, InfoWindow, DirectionsRenderer } from '@react-google-maps/api';\nimport \"./map.css\"\nimport mapStyles from './mapStyles'\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  margin: '0 auto',\n}\n\nconst center = {\n  lat: 40.74112,\n  lng: -73.98974\n}\n\nconst google = window.google\n\nfunction Map({userData}) {\n  // console.log(props);\n  const isLoaded = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyBmHkW3ofuiO5FCGSrDFflMhZ5nmQ1PfNM\",\n    libraries: libraries.places\n  })\n\n  const [selectedPlace, setSelectedPlace] = useState(null)\n  const [distance, setDistance] = useState(null)\n  const [duration, setDuration] = useState(null)\n  const [directions, setDirections] = useState(null)\n  const [map, setMap] = useState(null)\n  const [currentLocation, setCurrentLocation] = useState({\n    lat: 40.74112,\n    lng: -73.98974\n  })\n  const [destination, setDestination] = useState({\n    lat: null,\n    lng: null\n  })\n\n  const calculateRoute = () => {\n    const origin = new google.maps.LatLng(currentLocation.lat, currentLocation.lng)\n    const destination = new google.maps.LatLng(40.741976, -73.990584)\n    const directionsService = new google.maps.DirectionsService();\n    const directionsDisplay = new google.maps.DirectionsRenderer();\n    directionsDisplay.setMap(map);\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: 'WALKING'\n    }, (result, status) => {\n      if (status === 'OK') {\n        setDirections(result)\n        directionsDisplay.setDirections(result);\n      } else {\n        window.alert('Directions request failed due to ' + status);\n      }\n    });\n  }\n  // const calculateDistance = useCallback(() => {\n  //   // const origin = new google.maps.LatLng(currentLocation.lat, currentLocation.lng)\n  //   // const destination = new google.maps.LatLng(destination.lat, destination.lng)\n  //   const service = new google.maps.DistanceMatrixService()\n  //   service.getDistanceMatrix({\n  //     origins: [currentLocation],\n  //     destinations: [destination],\n  //     travelMode: google.maps.TravelMode.WALKING,\n  //     unitSystem: google.maps.UnitSystem.IMPERIAL,\n  //   }, (response, status) => {\n  //     if (status ===  google.maps.DistanceMatrixStatus.OK) {\n  //       const { distance, duration } = response.rows[0].elements[0]\n  //       setDistance(distance.text)\n  //       setDuration(duration.text)\n  //     }\n  //   })\n  // }, [currentLocation, destination])\n\n  const clearRoute = useCallback(() => {\n    setSelectedPlace(null)\n    setDistance(null)\n    setDuration(null)\n  }\n  , [setSelectedPlace, setDistance, setDuration])\n\n\n  \n  const image = \"./images/Captain_America's_Shield.png\"\n  const userMarker = \"./images/user.png\"\n\n  const [selectedMarker, setSelectedMarker] = useState()\n\n  // console.log(selectedMarker);\n  console.log(destination);\n\n  return isLoaded ? (\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={16}\n        options={{styles: mapStyles}}\n      >\n\n        <MarkerF\n          position={currentLocation}\n          icon={{\n            url: userMarker,\n            scaledSize: new window.google.maps.Size(25, 35)\n          }}\n          onClick={() => {\n            setSelectedMarker(currentLocation)\n            setSelectedPlace(currentLocation)\n          }\n          }\n        />\n\n      {userData.map((user) => {\n    let lat = parseFloat(user.lat);\n    let lng = parseFloat(user.lng);\n\n    return (\n      <MarkerF\n      key={user.id}\n      position= {{lat: lat, lng: lng}} \n      icon={{\n        url: image,\n        scaledSize: new window.google.maps.Size(28,28)\n      }}\n      onClick={() => {\n        setSelectedMarker(user)\n        setDestination({\n          ...destination,\n          lat: parseFloat(selectedMarker.lat), \n          lng: parseFloat(selectedMarker.lng)\n        })\n        console.log(user)\n      }}\n      />\n    )\n  })\n}\n\n\n      {selectedMarker && \n      (<InfoWindow\n      position= {{lat: parseFloat(selectedMarker.lat), lng: parseFloat(selectedMarker.lng)}}\n      onCloseClick={() => {\n        setSelectedMarker(null)\n      }}\n      >\n      <div id='infoWindow'>\n        User Details\n        <p>Name: {selectedMarker.first_name} {selectedMarker.last_name}</p>\n        <button onClick={calculateRoute}>Navigate</button>\n      </div>\n      </InfoWindow>\n      )}\n\n    </GoogleMap>\n     \n\n    \n    \n  ) : <h1>Loading</h1>\n}\nexport default React.memo(Map)"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,OAApC,EAA6CC,UAA7C,EAAyDC,kBAAzD,QAAmF,wBAAnF;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MADc;EAErBC,MAAM,EAAE,MAFa;EAGrBC,MAAM,EAAE;AAHa,CAAvB;AAMA,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,QADQ;EAEbC,GAAG,EAAE,CAAC;AAFO,CAAf;AAKA,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;;AAEA,SAASE,GAAT,OAAyB;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EACvB;EACA,MAAMC,QAAQ,GAAGhB,cAAc,CAAC;IAC9BiB,EAAE,EAAE,mBAD0B;IAE9BC,gBAAgB,EAAE,yCAFY;IAG9BC,SAAS,EAAEA,SAAS,CAACC;EAHS,CAAD,CAA/B;EAMA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC1B,QAAQ,CAAC,IAAD,CAAlD;EACA,MAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAAC6B,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAAC+B,UAAD,EAAaC,aAAb,IAA8BhC,QAAQ,CAAC,IAAD,CAA5C;EACA,MAAM,CAACiC,GAAD,EAAMC,MAAN,IAAgBlC,QAAQ,CAAC,IAAD,CAA9B;EACA,MAAM,CAACmC,eAAD,EAAkBC,kBAAlB,IAAwCpC,QAAQ,CAAC;IACrDc,GAAG,EAAE,QADgD;IAErDC,GAAG,EAAE,CAAC;EAF+C,CAAD,CAAtD;EAIA,MAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCtC,QAAQ,CAAC;IAC7Cc,GAAG,EAAE,IADwC;IAE7CC,GAAG,EAAE;EAFwC,CAAD,CAA9C;;EAKA,MAAMwB,cAAc,GAAG,MAAM;IAC3B,MAAMC,MAAM,GAAG,IAAIxB,MAAM,CAACyB,IAAP,CAAYC,MAAhB,CAAuBP,eAAe,CAACrB,GAAvC,EAA4CqB,eAAe,CAACpB,GAA5D,CAAf;IACA,MAAMsB,WAAW,GAAG,IAAIrB,MAAM,CAACyB,IAAP,CAAYC,MAAhB,CAAuB,SAAvB,EAAkC,CAAC,SAAnC,CAApB;IACA,MAAMC,iBAAiB,GAAG,IAAI3B,MAAM,CAACyB,IAAP,CAAYG,iBAAhB,EAA1B;IACA,MAAMC,iBAAiB,GAAG,IAAI7B,MAAM,CAACyB,IAAP,CAAYlC,kBAAhB,EAA1B;IACAsC,iBAAiB,CAACX,MAAlB,CAAyBD,GAAzB;IACAU,iBAAiB,CAACG,KAAlB,CAAwB;MACtBN,MAAM,EAAEA,MADc;MAEtBH,WAAW,EAAEA,WAFS;MAGtBU,UAAU,EAAE;IAHU,CAAxB,EAIG,CAACC,MAAD,EAASC,MAAT,KAAoB;MACrB,IAAIA,MAAM,KAAK,IAAf,EAAqB;QACnBjB,aAAa,CAACgB,MAAD,CAAb;QACAH,iBAAiB,CAACb,aAAlB,CAAgCgB,MAAhC;MACD,CAHD,MAGO;QACL/B,MAAM,CAACiC,KAAP,CAAa,sCAAsCD,MAAnD;MACD;IACF,CAXD;EAYD,CAlBD,CAtBuB,CAyCvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,MAAME,UAAU,GAAGlD,WAAW,CAAC,MAAM;IACnCyB,gBAAgB,CAAC,IAAD,CAAhB;IACAE,WAAW,CAAC,IAAD,CAAX;IACAE,WAAW,CAAC,IAAD,CAAX;EACD,CAJ6B,EAK5B,CAACJ,gBAAD,EAAmBE,WAAnB,EAAgCE,WAAhC,CAL4B,CAA9B;EASA,MAAMsB,KAAK,GAAG,uCAAd;EACA,MAAMC,UAAU,GAAG,mBAAnB;EAEA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCvD,QAAQ,EAApD,CAvEuB,CAyEvB;;EACAwD,OAAO,CAACC,GAAR,CAAYpB,WAAZ;EAEA,OAAOjB,QAAQ,gBACX,QAAC,SAAD;IACE,iBAAiB,EAAEX,cADrB;IAEE,MAAM,EAAEI,MAFV;IAGE,IAAI,EAAE,EAHR;IAIE,OAAO,EAAE;MAAC6C,MAAM,EAAElD;IAAT,CAJX;IAAA,wBAOE,QAAC,OAAD;MACE,QAAQ,EAAE2B,eADZ;MAEE,IAAI,EAAE;QACJwB,GAAG,EAAEN,UADD;QAEJO,UAAU,EAAE,IAAI3C,MAAM,CAACD,MAAP,CAAcyB,IAAd,CAAmBoB,IAAvB,CAA4B,EAA5B,EAAgC,EAAhC;MAFR,CAFR;MAME,OAAO,EAAE,MAAM;QACbN,iBAAiB,CAACpB,eAAD,CAAjB;QACAT,gBAAgB,CAACS,eAAD,CAAhB;MACD;IATH;MAAA;MAAA;MAAA;IAAA,QAPF,EAoBChB,QAAQ,CAACc,GAAT,CAAc6B,IAAD,IAAU;MAC1B,IAAIhD,GAAG,GAAGiD,UAAU,CAACD,IAAI,CAAChD,GAAN,CAApB;MACA,IAAIC,GAAG,GAAGgD,UAAU,CAACD,IAAI,CAAC/C,GAAN,CAApB;MAEA,oBACE,QAAC,OAAD;QAEA,QAAQ,EAAG;UAACD,GAAG,EAAEA,GAAN;UAAWC,GAAG,EAAEA;QAAhB,CAFX;QAGA,IAAI,EAAE;UACJ4C,GAAG,EAAEP,KADD;UAEJQ,UAAU,EAAE,IAAI3C,MAAM,CAACD,MAAP,CAAcyB,IAAd,CAAmBoB,IAAvB,CAA4B,EAA5B,EAA+B,EAA/B;QAFR,CAHN;QAOA,OAAO,EAAE,MAAM;UACbN,iBAAiB,CAACO,IAAD,CAAjB;UACAxB,cAAc,CAAC,EACb,GAAGD,WADU;YAEbvB,GAAG,EAAEiD,UAAU,CAACT,cAAc,CAACxC,GAAhB,CAFF;YAGbC,GAAG,EAAEgD,UAAU,CAACT,cAAc,CAACvC,GAAhB;UAHF,CAAD,CAAd;UAKAyC,OAAO,CAACC,GAAR,CAAYK,IAAZ;QACD;MAfD,GACKA,IAAI,CAACzC,EADV;QAAA;QAAA;QAAA;MAAA,QADF;IAmBD,CAvBI,CApBD,EA+CCiC,cAAc,iBACd,QAAC,UAAD;MACD,QAAQ,EAAG;QAACxC,GAAG,EAAEiD,UAAU,CAACT,cAAc,CAACxC,GAAhB,CAAhB;QAAsCC,GAAG,EAAEgD,UAAU,CAACT,cAAc,CAACvC,GAAhB;MAArD,CADV;MAED,YAAY,EAAE,MAAM;QAClBwC,iBAAiB,CAAC,IAAD,CAAjB;MACD,CAJA;MAAA,uBAMD;QAAK,EAAE,EAAC,YAAR;QAAA,wCAEE;UAAA,qBAAUD,cAAc,CAACU,UAAzB,OAAsCV,cAAc,CAACW,SAArD;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAQ,OAAO,EAAE1B,cAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA;IANC;MAAA;MAAA;MAAA;IAAA,QAhDD;EAAA;IAAA;IAAA;IAAA;EAAA,QADW,gBAoEX;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QApEJ;AAqED;;GAjJQrB,G;UAEUd,c;;;KAFVc,G;AAkJT,kCAAenB,KAAK,CAACmE,IAAN,CAAWhD,GAAX,CAAf"},"metadata":{},"sourceType":"module"}