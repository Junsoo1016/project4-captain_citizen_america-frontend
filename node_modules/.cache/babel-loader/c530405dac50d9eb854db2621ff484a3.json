{"ast":null,"code":"var _jsxFileName = \"/Users/junsoopark/Desktop/project/Final Project/project4-captain_citizen/project4-captain_citizen-frontend/captain_citizen_america/src/Map/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { GoogleMap, useJsApiLoader, MarkerF, InfoWindow } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  margin: '0 auto'\n};\nconst center = {\n  lat: 40.74112,\n  lng: -73.98974\n};\nconst options = {\n  mapId: \"fb4ccbd45b2f920e\"\n};\n\nfunction Map(_ref) {\n  _s();\n\n  let {\n    userData\n  } = _ref;\n  // console.log(props);\n  const isLoaded = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAwcOSQ6hnqoqiXX_1D1ykHOBAZZ2UorHE\"\n  });\n  const image = \"./images/Captain_America's_Shield.png\";\n  const userMarker = \"./images/user.png\";\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const coordinatesList = userData.map(user => {\n    // console.log(user);\n    let lat = parseFloat(user.lat); // console.log(lat);\n\n    let lng = parseFloat(user.lng);\n    return (\n      /*#__PURE__*/\n      // <Marker\n      // position= {{lat: 40.73999, lng: -73.99020}} \n      // icon={{\n      //   url: userMarker,\n      //   scaledSize: new window.google.maps.Size(20,30)\n      // }}\n      // />,\n      _jsxDEV(MarkerF, {\n        position: {\n          lat: lat,\n          lng: lng\n        },\n        icon: {\n          url: image,\n          scaledSize: new window.google.maps.Size(28, 28)\n        },\n        onClick: () => {\n          setSelectedMarker(user);\n          console.log(\"clicked\");\n          return /*#__PURE__*/_jsxDEV(InfoWindow, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"User Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)\n    );\n  });\n  return isLoaded ? ( /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 16,\n    options: options,\n    children: [\"await \", coordinatesList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(InfoWindow, {\n    position: {\n      lat: selectedMarker.lat,\n      selectedMarkerlng: lng\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"User Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Map, \"iccTB+XshPFTfWm3CQV2waAYEfQ=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","GoogleMap","useJsApiLoader","MarkerF","InfoWindow","containerStyle","width","height","margin","center","lat","lng","options","mapId","Map","userData","isLoaded","id","googleMapsApiKey","image","userMarker","selectedMarker","setSelectedMarker","coordinatesList","map","user","parseFloat","url","scaledSize","window","google","maps","Size","console","log","selectedMarkerlng","memo"],"sources":["/Users/junsoopark/Desktop/project/Final Project/project4-captain_citizen/project4-captain_citizen-frontend/captain_citizen_america/src/Map/Map.js"],"sourcesContent":["import React, {useState, useCallback, useEffect} from 'react'\nimport { GoogleMap, useJsApiLoader, MarkerF, InfoWindow } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  margin: '0 auto',\n}\n\nconst center = {\n  lat: 40.74112,\n  lng: -73.98974\n}\n\nconst options = {\n  mapId: \"fb4ccbd45b2f920e\"\n}\n\n\n\nfunction Map({userData}) {\n  // console.log(props);\n  const isLoaded = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAwcOSQ6hnqoqiXX_1D1ykHOBAZZ2UorHE\"\n  })\n\n  const image = \"./images/Captain_America's_Shield.png\"\n  const userMarker = \"./images/user.png\"\n\n  const [selectedMarker, setSelectedMarker] = useState(null)\n\n  const coordinatesList = userData.map((user) => {\n    // console.log(user);\n    let lat = parseFloat(user.lat);\n    // console.log(lat);\n    let lng = parseFloat(user.lng);\n\n    return (\n      // <Marker\n      // position= {{lat: 40.73999, lng: -73.99020}} \n      // icon={{\n      //   url: userMarker,\n      //   scaledSize: new window.google.maps.Size(20,30)\n      // }}\n      // />,\n      <MarkerF\n      position= {{lat: lat, lng: lng}} \n      icon={{\n        url: image,\n        scaledSize: new window.google.maps.Size(28,28)\n      }}\n      onClick={() => {\n        setSelectedMarker(user)\n        console.log(\"clicked\")\n        return (\n        <InfoWindow>\n          <div>User Details</div>\n        </InfoWindow>\n        )\n      }}\n      />\n    )\n  })\n\n  return isLoaded ? (\n    <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={16}\n        options={options}\n      >\n\n      await {coordinatesList}\n      \n\n    </GoogleMap>,\n    <InfoWindow position= {{lat: selectedMarker.lat, selectedMarkerlng: lng}}>\n    <div>User Details</div>\n  </InfoWindow>\n    \n  ) : <h1>Loading</h1>\n}\nexport default React.memo(Map)"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,OAApC,EAA6CC,UAA7C,QAA+D,wBAA/D;;AAEA,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MADc;EAErBC,MAAM,EAAE,MAFa;EAGrBC,MAAM,EAAE;AAHa,CAAvB;AAMA,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,QADQ;EAEbC,GAAG,EAAE,CAAC;AAFO,CAAf;AAKA,MAAMC,OAAO,GAAG;EACdC,KAAK,EAAE;AADO,CAAhB;;AAMA,SAASC,GAAT,OAAyB;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EACvB;EACA,MAAMC,QAAQ,GAAGd,cAAc,CAAC;IAC9Be,EAAE,EAAE,mBAD0B;IAE9BC,gBAAgB,EAAE;EAFY,CAAD,CAA/B;EAKA,MAAMC,KAAK,GAAG,uCAAd;EACA,MAAMC,UAAU,GAAG,mBAAnB;EAEA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCxB,QAAQ,CAAC,IAAD,CAApD;EAEA,MAAMyB,eAAe,GAAGR,QAAQ,CAACS,GAAT,CAAcC,IAAD,IAAU;IAC7C;IACA,IAAIf,GAAG,GAAGgB,UAAU,CAACD,IAAI,CAACf,GAAN,CAApB,CAF6C,CAG7C;;IACA,IAAIC,GAAG,GAAGe,UAAU,CAACD,IAAI,CAACd,GAAN,CAApB;IAEA;MAAA;MACE;MACA;MACA;MACA;MACA;MACA;MACA;MACA,QAAC,OAAD;QACA,QAAQ,EAAG;UAACD,GAAG,EAAEA,GAAN;UAAWC,GAAG,EAAEA;QAAhB,CADX;QAEA,IAAI,EAAE;UACJgB,GAAG,EAAER,KADD;UAEJS,UAAU,EAAE,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,IAAvB,CAA4B,EAA5B,EAA+B,EAA/B;QAFR,CAFN;QAMA,OAAO,EAAE,MAAM;UACbV,iBAAiB,CAACG,IAAD,CAAjB;UACAQ,OAAO,CAACC,GAAR,CAAY,SAAZ;UACA,oBACA,QAAC,UAAD;YAAA,uBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADA;QAKD;MAdD;QAAA;QAAA;QAAA;MAAA;IARF;EAyBD,CA/BuB,CAAxB;EAiCA,OAAOlB,QAAQ,IACb,sBAAC,SAAD;IACI,iBAAiB,EAAEX,cADvB;IAEI,MAAM,EAAEI,MAFZ;IAGI,IAAI,EAAE,EAHV;IAII,OAAO,EAAEG,OAJb;IAAA,qBAOSW,eAPT;EAAA;IAAA;IAAA;IAAA;EAAA,uBAWA,QAAC,UAAD;IAAY,QAAQ,EAAG;MAACb,GAAG,EAAEW,cAAc,CAACX,GAArB;MAA0ByB,iBAAiB,EAAExB;IAA7C,CAAvB;IAAA,uBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QAZa,iBAgBX;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAhBJ;AAiBD;;GA9DQG,G;UAEUZ,c;;;KAFVY,G;AA+DT,kCAAejB,KAAK,CAACuC,IAAN,CAAWtB,GAAX,CAAf"},"metadata":{},"sourceType":"module"}