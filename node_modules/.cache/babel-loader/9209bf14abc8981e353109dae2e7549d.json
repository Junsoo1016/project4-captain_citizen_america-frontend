{"ast":null,"code":"var _jsxFileName = \"/Users/junsoopark/Desktop/project/Final Project/project4-captain_citizen/project4-captain_citizen-frontend/captain_citizen_america/src/Map/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { GoogleMap, useJsApiLoader, MarkerF, InfoWindow, DirectionsRenderer } from '@react-google-maps/api';\nimport \"./map.css\";\nimport mapStyles from './mapStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  margin: '0 auto'\n};\nconst center = {\n  lat: 40.74112,\n  lng: -73.98974\n};\nconst google = window.google;\n\nfunction Map(_ref) {\n  _s();\n\n  let {\n    userData\n  } = _ref;\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  console.log(API_KEY); // console.log(props);\n\n  const isLoaded = useJsApiLoader({\n    id: 'google-map-script',\n    version: \"weekly\",\n    googleMapsApiKey: API_KEY,\n    libraries: ['places']\n  });\n  const [clicked, setClicked] = useState(false);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [directions, setDirections] = useState(null);\n  const [map, setMap] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState({\n    lat: 40.74112,\n    lng: -73.98974\n  });\n  const [destination, setDestination] = useState({\n    lat: null,\n    lng: null\n  });\n\n  const calculateRoute = e => {\n    e.preventDefault();\n    setClicked(!clicked);\n    const polylineOptionsActual = new google.maps.Polyline({\n      strokeColor: 'rgb(255, 85, 0)',\n      strokeOpacity: 1.0,\n      strokeWeight: 5\n    });\n    const origin = new google.maps.LatLng(currentLocation.lat, currentLocation.lng);\n    const userDestination = new google.maps.LatLng(destination.lat, destination.lng);\n    const directionsService = new google.maps.DirectionsService();\n    const directionsDisplay = new google.maps.DirectionsRenderer({\n      suppressMarkers: true,\n      polylineOptions: polylineOptionsActual\n    });\n    directionsDisplay.setMap(map);\n    directionsService.route({\n      origin: origin,\n      destination: userDestination,\n      travelMode: 'WALKING'\n    }, (result, status) => {\n      if (status === 'OK') {\n        console.log(result);\n        setDirections(result);\n        directionsDisplay.setDirections(result);\n      } else {\n        window.alert('Directions request failed due to ' + status);\n      }\n    });\n  };\n\n  const clearDirectionService = e => {\n    e.preventDefault();\n    setClicked(!clicked);\n    setDirections(null);\n    setMap(map);\n  };\n\n  const image = \"./images/Captain_America's_Shield.png\";\n  const userMarker = \"./images/user.png\";\n  const [selectedMarker, setSelectedMarker] = useState(); // console.log(selectedMarker);\n\n  console.log(destination);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 16,\n    options: {\n      styles: mapStyles,\n      disableDefaultUI: true\n    },\n    onLoad: map => setMap(map),\n    children: [/*#__PURE__*/_jsxDEV(MarkerF, {\n      position: currentLocation,\n      icon: {\n        url: userMarker,\n        scaledSize: new window.google.maps.Size(25, 35)\n      },\n      onClick: () => {\n        setSelectedMarker(currentLocation);\n        setSelectedPlace(currentLocation);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), userData.map(user => {\n      let lat = parseFloat(user.lat);\n      let lng = parseFloat(user.lng);\n      return /*#__PURE__*/_jsxDEV(MarkerF, {\n        position: {\n          lat: lat,\n          lng: lng\n        },\n        icon: {\n          url: image,\n          scaledSize: new window.google.maps.Size(28, 28)\n        },\n        onClick: () => {\n          setSelectedMarker(user);\n          setDestination({ ...destination,\n            lat: parseFloat(user.lat),\n            lng: parseFloat(user.lng)\n          });\n          console.log(user);\n        }\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this);\n    }), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: parseFloat(selectedMarker.lat),\n        lng: parseFloat(selectedMarker.lng)\n      },\n      onCloseClick: () => {\n        setSelectedMarker(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"infoWindow\",\n        children: [\"User Details\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedMarker.first_name, \" \", selectedMarker.last_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this), !clicked ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: calculateRoute,\n          children: \"Navigate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearDirectionService,\n          children: \"Clear Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Map, \"ejU2amn8tr6MgvFsv+pwbfiYGy0=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","GoogleMap","useJsApiLoader","MarkerF","InfoWindow","DirectionsRenderer","mapStyles","containerStyle","width","height","margin","center","lat","lng","google","window","Map","userData","API_KEY","process","env","REACT_APP_API_KEY","console","log","isLoaded","id","version","googleMapsApiKey","libraries","clicked","setClicked","selectedPlace","setSelectedPlace","distance","setDistance","duration","setDuration","directions","setDirections","map","setMap","currentLocation","setCurrentLocation","destination","setDestination","calculateRoute","e","preventDefault","polylineOptionsActual","maps","Polyline","strokeColor","strokeOpacity","strokeWeight","origin","LatLng","userDestination","directionsService","DirectionsService","directionsDisplay","suppressMarkers","polylineOptions","route","travelMode","result","status","alert","clearDirectionService","image","userMarker","selectedMarker","setSelectedMarker","styles","disableDefaultUI","url","scaledSize","Size","user","parseFloat","first_name","last_name","memo"],"sources":["/Users/junsoopark/Desktop/project/Final Project/project4-captain_citizen/project4-captain_citizen-frontend/captain_citizen_america/src/Map/Map.js"],"sourcesContent":["import React, {useState, useCallback, useEffect} from 'react'\nimport { GoogleMap, useJsApiLoader, MarkerF, InfoWindow, DirectionsRenderer } from '@react-google-maps/api';\nimport \"./map.css\"\nimport mapStyles from './mapStyles'\n\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  margin: '0 auto',\n}\n\nconst center = {\n  lat: 40.74112,\n  lng: -73.98974\n}\n\nconst google = window.google\n\nfunction Map({userData}) {\n  const API_KEY = process.env.REACT_APP_API_KEY\n  console.log(API_KEY);\n  // console.log(props);\n  const isLoaded = useJsApiLoader({\n    id: 'google-map-script',\n    version: \"weekly\",\n    googleMapsApiKey: API_KEY,\n    libraries: ['places'],\n  })\n\n  const [clicked, setClicked] = useState(false)\n  const [selectedPlace, setSelectedPlace] = useState(null)\n  const [distance, setDistance] = useState(null)\n  const [duration, setDuration] = useState(null)\n  const [directions, setDirections] = useState(null)\n  const [map, setMap] = useState(null)\n  const [currentLocation, setCurrentLocation] = useState({\n    lat: 40.74112,\n    lng: -73.98974\n  })\n  const [destination, setDestination] = useState({\n    lat: null,\n    lng: null\n  })\n\n  const calculateRoute = (e) => {\n    e.preventDefault()\n    setClicked(!clicked)\n    const polylineOptionsActual = new google.maps.Polyline({\n      strokeColor: 'rgb(255, 85, 0)',\n      strokeOpacity: 1.0,\n      strokeWeight: 5\n      });\n    const origin = new google.maps.LatLng(currentLocation.lat, currentLocation.lng)\n    const userDestination = new google.maps.LatLng(destination.lat, destination.lng)\n    const directionsService = new google.maps.DirectionsService();\n    const directionsDisplay = new google.maps.DirectionsRenderer({\n      suppressMarkers: true,\n      polylineOptions: polylineOptionsActual\n    });\n    directionsDisplay.setMap(map);\n    directionsService.route({\n      origin: origin,\n      destination: userDestination,\n      travelMode: 'WALKING'\n    }, (result, status) => {\n      if (status === 'OK') {\n        console.log(result);\n        setDirections(result)\n        directionsDisplay.setDirections(result);\n      } else {\n        window.alert('Directions request failed due to ' + status);\n      }\n    });\n  }\n\n  const clearDirectionService = (e) => {\n    e.preventDefault()\n    setClicked(!clicked)\n    setDirections(null)\n    setMap(map)\n  }\n\n\n  \n  const image = \"./images/Captain_America's_Shield.png\"\n  const userMarker = \"./images/user.png\"\n\n  const [selectedMarker, setSelectedMarker] = useState()\n\n  // console.log(selectedMarker);\n  console.log(destination);\n\n  return isLoaded ? (\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={16}\n        options={{\n          styles: mapStyles,\n          disableDefaultUI: true,\n        }}\n        onLoad={(map) => setMap(map)}\n      >\n\n        <MarkerF\n          position={currentLocation}\n          icon={{\n            url: userMarker,\n            scaledSize: new window.google.maps.Size(25, 35)\n          }}\n          onClick={() => {\n            setSelectedMarker(currentLocation)\n            setSelectedPlace(currentLocation)\n          }\n          }\n        />\n\n      {userData.map((user) => {\n    let lat = parseFloat(user.lat);\n    let lng = parseFloat(user.lng);\n\n    return (\n      <MarkerF\n      key={user.id}\n      position= {{lat: lat, lng: lng}} \n      icon={{\n        url: image,\n        scaledSize: new window.google.maps.Size(28,28)\n      }}\n      onClick={() => {\n        setSelectedMarker(user)\n        setDestination({\n          ...destination,\n          lat: parseFloat(user.lat), \n          lng: parseFloat(user.lng)\n        })\n        console.log(user)\n      }}\n      />\n    )\n  })\n}\n\n\n      {selectedMarker && \n      (<InfoWindow\n      position= {{lat: parseFloat(selectedMarker.lat), lng: parseFloat(selectedMarker.lng)}}\n      onCloseClick={() => {\n        setSelectedMarker(null)\n      }}\n      >\n      <div id='infoWindow'>\n        User Details\n        <p>Name: {selectedMarker.first_name} {selectedMarker.last_name}</p>\n        {!clicked ?\n        <button onClick={calculateRoute}>Navigate</button> : <button onClick={clearDirectionService}>Clear Route</button>\n        }\n      </div>\n      </InfoWindow>\n      )}\n\n    </GoogleMap>\n     \n\n    \n    \n  ) : <h1>Loading</h1>\n}\nexport default React.memo(Map)"],"mappings":"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"},"metadata":{},"sourceType":"module"}